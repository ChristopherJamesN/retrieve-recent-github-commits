test-word-react-add-in
2019-05-10T22:01:42Z
Remove hardcoding of loginURL.
2019-05-10T21:43:35Z
Add some more cleanup on the dialog api redirection logic.
2019-05-10T21:20:55Z
Cleanup some of the dialog.html redirection logic.
2019-05-10T20:23:35Z
Fix executeRecordSearch test.
2019-05-10T20:20:27Z
Remove hardcoding for hostUri and hostName.
2019-05-10T20:08:30Z
Update conditional rendering.
2019-05-10T19:54:04Z
Set currentScreen to LoginView after logging in successfully.
2019-05-10T19:24:14Z
Move environment menu item component into LoginView.
2019-05-10T18:53:25Z
Populate the EnvironmentMenuItem component properly.
2019-05-10T18:25:40Z
Pass hostURI to the dialog.html.
2019-05-10T18:01:14Z
Remove unused age state variable.
2019-05-10T14:08:07Z
Add current host uri to values displayed on environment selection.
2019-05-10T13:44:39Z
Handle back from new document check-in correctly.
2019-05-10T13:39:38Z
Update error handling for document check-in.
2019-05-10T13:33:06Z
Update conditional rendering to use currentScreen variable.
2019-05-10T13:20:07Z
Also save environment names in local storage.
2019-05-09T17:28:48Z
Remove extra onSubmit handler.
2019-05-09T13:17:49Z
Add a test for the EnvironmentMenuItem.
2019-05-09T13:16:03Z
Extract MenuItem into a seperate component.
2019-05-08T19:14:20Z
Add logic to store previously used environments in local storage.
2019-05-08T17:27:41Z
Add method to handle submitting a new URI.
2019-05-08T17:22:27Z
Update UI of Login View and add local state for host uri and name.
2019-05-08T17:04:08Z
Stub out a placeholder select component on the LoginView.
This select will allow the user to select a previously used host URI for login.
2019-05-07T21:25:04Z
Add a hostName state value and set it on the LoginView.
2019-05-07T19:59:52Z
Display hostUri and name on LoginView.
2019-05-07T19:52:50Z
Update formatting of input text fields on LoginView component.
2019-05-07T19:34:07Z
Update version number in package.json.
2019-05-07T18:13:32Z
Refactor DocumentListItem into separate component and add test.
2019-05-07T17:58:50Z
Remove unused DocumentAppsTable component.
2019-05-07T17:38:02Z
Remove unneeded imports.
word-add-in-pass-through-service
2019-05-07T16:18:35Z
Add tests for rest with session id endpoints.
2019-05-07T14:53:48Z
Update tests to run against CLM gold environment rather than Legal Holds
2019-05-07T14:08:37Z
Update APIController formatting.
2019-05-06T23:03:27Z
Remove unused setHostName method and endpoint.
2019-05-06T22:10:24Z
Pass related atom app name to the SDK on new document creation.
2019-05-06T21:40:54Z
Remove unused button id from new document endpoint.
2019-05-06T20:35:35Z
Use document name value passed from react client rather than hard-coding
2019-05-06T19:41:33Z
Remove unneeded fields for new document upload endpoint.
2019-05-06T19:01:46Z
Retrieve atom dictionary id for document app.
2019-05-06T18:28:19Z
Add an endpoint to handle creating new document records.
2019-05-05T21:19:53Z
Add logic to parse an ArrayList of Integer's from the react client.
This method works for creating the document, but only if there is a
limited amount of data in the document.
2019-05-05T19:24:50Z
Attempt to use LoadOptions parameter with Document initialization.
This method was still not successful, the byte array input stream is
written as text to the document, rather than being used to construct
the document.
2019-05-05T18:52:54Z
Write text received from react client to new Aspose Document.
Rather than trying to get the entire file and convert the byte array to
a Document file, this method just uses the raw text and writes that text
to a new Document object.
Formatting will be lost using this method, so it is only a temporary
solution.
Also updated the target Java version to 11 from 8.
2019-05-05T15:29:58Z
Delete the file after posting it to Onit.
2019-05-05T15:16:40Z
Attempt to use FileOutputStream to read in the byte array data.
2019-05-03T02:19:18Z
Use ByteArrayInputStream to create a new aspose Document object.
2019-05-02T20:19:33Z
Use aspose words to handle conversion from binary array to word doc.
2019-05-01T21:54:33Z
Add an endpoint to retrieve the current user name and email.
2019-05-01T21:03:46Z
Update logic in for retrieving next atom number.
Iterate over the data retrieved from the new.json get request and return
the next atom number.
2019-05-01T20:22:29Z
Add a new endpoint to retrieve the next atom number.
2019-05-01T19:51:06Z
Accept hostUri parameter from all rest with session id endpoints.
2019-05-01T19:42:15Z
Change endpoints to accept documentAppId as a PathVariable as needed.
2019-05-01T16:43:38Z
Pull back nested atom properties in restCheckinDocumentWithSessionId.
2019-05-01T15:47:08Z
Add atomDictionaryId to the values returned from restGetDocAppId.
2019-04-30T23:48:50Z
Pass documentCheckInAppId to the sdk restCheckInDocumentWithSessionId method.
2019-04-30T19:22:31Z
Update call to api.restCheckInDocumentWithSessionId accept string.
Pass a binary string representing a word document, rather than a file
object. The binary string will be converted to a file object by the sdk.
2019-04-30T16:27:08Z
Remove import and @XmlRootElement from ConversionRequest.java.
These values were causing build errors and preventing the creation of
the needed WAR.
2019-04-29T20:05:12Z
Add documentCheckInAppId to return values in restGetDocAppIdWithSessionId
2019-04-29T19:40:14Z
Add File parameter in call to restCheckInDocumentWithSessionId.
This File parameter represents the actual MS word document that needs to
be uploaded with a new version number.
2019-04-29T18:11:57Z
Add logic to retrieve the Document Check-in app id.
This app id is needed when making post requests to check-in a new
version of a document.
onit_java_sdk
2019-05-07T14:07:11Z
Add tests for retrieving next atom number, current user, and checkout.
2019-05-07T13:48:25Z
Add unit tests for rest methods using session id as authentication.
Set these tests against our internal CLM gold environment.
2019-05-06T22:11:38Z
Add related atom name to the parameters accepted for new documents.
This makes the method more flexible, and allows for documents to be
added to any record in an app that is document enabled, not just a
contracts app or matters app.
2019-05-06T21:41:30Z
Remove unneeded button_id from new document creation methods.
2019-05-06T20:34:01Z
Fix typo in atom[related_atoms] form field.
2019-05-06T19:40:10Z
Add needed fields for new document upload method.
2019-05-06T19:21:26Z
Remove major version and minor version parameters.
Removing these parameters from the restCheckInNewDocumentWithSessionId
method. These parameters are assumed to be 1 and 0 on a new document
check-in.
2019-05-06T18:27:28Z
Add a method to check-in new documents with session_id.
2019-05-04T19:46:47Z
Fix typo in "_attachment_fields[]" fileParts field.
2019-05-02T19:42:43Z
Move base64 decoding and file handling to pass-through service.
2019-05-01T21:52:22Z
Add an endpoint to retrieve the current user using session id.
2019-05-01T20:21:55Z
Add a new endpoint to retrieve the next atom number.
2019-05-01T18:16:13Z
Set the file name based on the atomName that is passed in.
Also remove unnecessary setting of the content-type header from the
doUploadSessionId method.
2019-05-01T16:25:05Z
Add all needed parameters to uploadDocumentWithSessionId.
2019-05-01T15:31:03Z
Stub out all necessary form fields for uploadDocumentWithSessionId
2019-05-01T00:02:59Z
Fix request type for doUploadWithSessionId method (put to post).
2019-04-30T19:23:38Z
Update logic in uploadDocumentWithSessionId to accept a string for file.
Accept a binary string representing the file, and create a new file on
the fly to upload to the core Onit platform.
2019-04-29T19:42:01Z
Add uploadDocumentWithSessionId and doUploadWithSessionId methods.
These methods were added to the RestAPI class, and are used to make the
put request to create a new document version and upload the given
document to associate with that new version.
2019-04-29T18:16:02Z
Add a restCheckInDocumentWithSessionId method and corresponding constant
2019-04-26T16:48:04Z
Add the buttonId as the action_button_id param to executeRequest method.
2019-04-25T22:26:15Z
Add buttonId and content-type header to documentCheckout methods.
2019-04-25T15:23:31Z
Fix typo, csfr to csrf.
2019-04-25T13:19:23Z
Add an executeRequest override that accepts a x-csfr-token.
This override will be used for PUT and POST requests that require the x-csfr-token
header in addition to the _session_id header for authentication.
2019-04-24T21:27:54Z
Add a method executePutWithSessionId.
This method will be used within the word add-in context to create
requests to checkout documents.
2019-04-24T19:27:45Z
Add a restCheckOutDocumentWithSessionId method and constant.
This method will allow the consuming service to checkout a document via
that document's atom id.
2019-04-18T18:35:28Z
Remove duplicate setting of header.
2019-04-17T14:52:16Z
Remove hardcoding of sessionId.
2019-04-16T21:45:48Z
Add session specific endpoints. Also hardcoded sessionId for testing.
Eventually these endpoints should be generalized and a single parameter
should be passed to the Onit API class to specify that the session_id
is being used as the authentication method. Also hardcoded the sessionId
for testing, since I am pulling the id from my local appbuilder debug
instance and I need the session_id from the deployed CLM environment
that I am testing against.
2019-04-16T20:48:55Z
Add new methods to use session_id as the authentication method.
2019-04-15T18:30:11Z
Merge branch 'word_add_in_onit_java_sdk' into 'master'

Word add in onit java sdk

See merge request product_lines/onit_java_sdk!3
